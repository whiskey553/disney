/*!
 * /*
 *                ./ddmMMMMMMMMMMddm-                              -ddmMMMMMMMMMMddm\.
 *            .+ddMMMMMMMMMMMMMMMMMMMMd:                        :ddMMMMMMMMMMMMMMMMMMMMd+.
 *          :dMMMMMMMMMMMMMMMMMMMMMMMMMMd´                    `dMMMMMMMMMMMMMMMMMMMMMMMMMd:
 *        .dDMMMMMMMMMMMMMMMMMMMMMMMMMMMMd                    dMMMMMMMMMMMMMMMMMMMMMMMMMMMDd.
 *       dDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd´                  `dMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDd
 *      `MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd                    dMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMD´
 *      .MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd,.mMMMMMMMMMMMMMMm..,MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMD.
 *       dDMMMMMMMMMMMMMMMMMMMMMMMMMdm/-´     `-+dMMMd+-´      `ddmMMMMMMMMMMMMMMMMMMMMMMMMMMDd
 *        dDMMMMMMMMMMMMMMMMMMMMMdd-              :m:              -ddMMMMMMMMMMMMMMMMMMMMMMDd
 *         `\dMMMMMMMMMMMMMMMMMMdd                 '                 ddMMMMMMMMMMMMMMMMMMMd/´
 *             `:dDMMMMMMmddMMMDd                                     ddMMMdmdddMMMMddm+:´
 *                        -DDMMM+           .mMm.     .mMm.           +DDMMm-
 *                       .DMMMMM\          .MMMMM´   `MMMMM:          /MMMMMD.
 *                       mMMMMMMM\         :MMMMM:   :MMMMM:         /MMMMMMMm
 *                      :MM+´´++dd.         :MMMM:   :MMMM:         .dd++``+MM.
 *                      .M        `           .ddmDDMddm.           ´        M.
 *                       M-    ++            .MMMMMMMMMMM             ++    -M
 *                       `M.    .D+`          `+ddMMMdm+´          ´+D.    .M´
 *                        `M:     ddm\`                         ´/ddm     :M´
 *                          \M.     +DDMd\_                 _/ddMM+´    .M/
 *                            \M:    `dMMMMMDddmmmmmmmmdddMMMMMMMd´   :M/
 *                              \.Mm   `+ddMMMMMMMMMMMMMMMMMdd+´   mM./
 *                                 `ddm    -ddMMMMMMMMMMdd-    ddm´
 *                                     -ddm                ddm-
 *                                          -ddmddmddmddm-
 *
 *  * /
 */!function(){var o,e={"./assets/src/js/app.js":
/*!******************************!*\
  !*** ./assets/src/js/app.js ***!
  \******************************/function(o,e,s){"use strict";s.r(e);s(/*! ./app/site */"./assets/src/js/app/site.js"),s(/*! ./app/downloads */"./assets/src/js/app/downloads.js")},"./assets/src/js/app/downloads.js":
/*!****************************************!*\
  !*** ./assets/src/js/app/downloads.js ***!
  \****************************************/function(){},"./assets/src/js/app/setjqueryglobal.js":
/*!**********************************************!*\
  !*** ./assets/src/js/app/setjqueryglobal.js ***!
  \**********************************************/function(o,e,s){"use strict";s.r(e);var n=s(/*! jquery */"./node_modules/jquery/dist/jquery.js"),t=s.n(n);window.jQuery=t()},"./assets/src/js/app/site.js":
/*!***********************************!*\
  !*** ./assets/src/js/app/site.js ***!
  \***********************************/function(o,e,s){"use strict";s.r(e);s(/*! ./setjqueryglobal */"./assets/src/js/app/setjqueryglobal.js"),s(/*! jquery */"./node_modules/jquery/dist/jquery.js");var n,t=s(/*! bootstrap */"./node_modules/bootstrap/dist/js/bootstrap.esm.js"),r=(s(/*! particles.js */"./node_modules/particles.js/particles.js"),s(/*! jquery */"./node_modules/jquery/dist/jquery.js")),c=s(/*! jquery */"./node_modules/jquery/dist/jquery.js");(n=r)((()=>{n('[data-bs-toggle="tooltip"]').tooltip(),n(".carousel").each((function(){n(this).find(".carousel-item").first().addClass("active"),n(this).find(".carousel-indicators button").first().addClass("active")}))})),c((function(){let o=!0;function e(){window.innerWidth<=768&&(c(".sidebar-container").removeClass("show"),c(".sidebar-toggle").removeClass("collapse").addClass("collapsed"),o=!1)}function s(){o?(c(".feature-main").css({"padding-left":window.innerWidth<=992?"200px":"310px"}),c(".aloha-docs.single-post .content-row").removeClass("justify-content-center"),c("body").css("overflow","unset"),window.innerWidth<=576&&c("body").css({overflow:"hidden"})):(c(".feature-main").css({"padding-left":"0px"}),c("body").css("overflow","unset"),c(".aloha-docs.single-post .content-row").addClass("justify-content-center"))}c(".youtube-grid-link").on("click",(function(o){o.preventDefault(),c(".youtube-embed-container").addClass("show")})),c(".tiktok-grid-link").on("click",(function(o){o.preventDefault(),c(".tiktok-embed-container").addClass("show")})),c(document).on("click",".sidebar-toggle",(function(){o=!o,s()})),c(window).on("resize",(function(){e(),s()})),e(),s(),c(".copy-url").on("click",(function(){navigator.clipboard.writeText(window.location.href)})),c('[data-bs-toggle="popover"]').popover(),c(window).on("scroll",(function(){c(document).scrollTop()>1e3?c(".scroll-to-top").show():c(".scroll-to-top").hide()})),c(".scroll-to-top").on("click",(function(){document.body.scrollTop=0,document.documentElement.scrollTop=0}));var n=0,t=0,r=0,i=0,l=0;c("div.post-style-item").each((function(){var o=c(this).outerHeight();c(this).children(".tiktok-card").length>0&&(o+=700),c(this).children(".instagram-card").length>0&&(o+=400),r<=(i&&l)?(n<=t?(n+=o,c(this).appendTo("#xl-1-column, #md-1-column, #sm-column")):(t+=o,c(this).appendTo("#xl-1-column, #md-2-column, #sm-column")),r+=o):i<=(r&&l)?(n<=t?(n+=o,c(this).appendTo("#xl-2-column, #md-1-column, #sm-column")):(t+=o,c(this).appendTo("#xl-2-column, #md-2-column, #sm-column")),i+=o):(n<=t?(n+=o,c(this).appendTo("#xl-3-column, #md-1-column, #sm-column")):(t+=o,c(this).appendTo("#xl-3-column, #md-2-column, #sm-column")),l+=o)})).fadeTo(400,1),c(".search-btn").on("click",(function(){c(".search-bar").toggleClass("show")}))})),c(document).ready((function(){c(".wp-block-aloha-takeover-slider .carousel-indicators .slider-indicator").hover((function(){var o=Number(c(this).attr("data-bs-slide-to"));const e=document.querySelector(".wp-block-aloha-takeover-slider");new t.Carousel(e).to(o)}))})),window.console&&console.log("Aloha!")},"./assets/src/scss/app.scss":
/*!**********************************!*\
  !*** ./assets/src/scss/app.scss ***!
  \**********************************/function(o,e,s){"use strict";s.r(e)}},s={};function n(o){var t=s[o];if(void 0!==t)return t.exports;var r=s[o]={exports:{}};return e[o].call(r.exports,r,r.exports,n),r.exports}n.m=e,o=[],n.O=function(e,s,t,r){if(!s){var c=1/0;for(u=0;u<o.length;u++){s=o[u][0],t=o[u][1],r=o[u][2];for(var i=!0,l=0;l<s.length;l++)(!1&r||c>=r)&&Object.keys(n.O).every((function(o){return n.O[o](s[l])}))?s.splice(l--,1):(i=!1,r<c&&(c=r));if(i){o.splice(u--,1);var a=t();void 0!==a&&(e=a)}}return e}r=r||0;for(var u=o.length;u>0&&o[u-1][2]>r;u--)o[u]=o[u-1];o[u]=[s,t,r]},n.n=function(o){var e=o&&o.__esModule?function(){return o.default}:function(){return o};return n.d(e,{a:e}),e},n.d=function(o,e){for(var s in e)n.o(e,s)&&!n.o(o,s)&&Object.defineProperty(o,s,{enumerable:!0,get:e[s]})},n.o=function(o,e){return Object.prototype.hasOwnProperty.call(o,e)},n.r=function(o){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})},function(){var o={app:0};n.O.j=function(e){return 0===o[e]};var e=function(e,s){var t,r,c=s[0],i=s[1],l=s[2],a=0;if(c.some((function(e){return 0!==o[e]}))){for(t in i)n.o(i,t)&&(n.m[t]=i[t]);if(l)var u=l(n)}for(e&&e(s);a<c.length;a++)r=c[a],n.o(o,r)&&o[r]&&o[r][0](),o[r]=0;return n.O(u)},s=self.webpackChunkaloha=self.webpackChunkaloha||[];s.forEach(e.bind(null,0)),s.push=e.bind(null,s.push.bind(s))}(),n.O(void 0,["vendor"],(function(){return n("./assets/src/scss/app.scss")}));var t=n.O(void 0,["vendor"],(function(){return n("./assets/src/js/app.js")}));t=n.O(t)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,